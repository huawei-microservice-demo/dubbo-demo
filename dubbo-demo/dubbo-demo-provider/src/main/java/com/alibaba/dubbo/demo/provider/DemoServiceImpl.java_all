/*
 * Copyright 1999-2011 Alibaba Group.
 *  
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *  
 *      http://www.apache.org/licenses/LICENSE-2.0
 *  
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.alibaba.dubbo.demo.provider;

import com.alibaba.dubbo.demo.DemoService;
//import com.alibaba.dubbo.demo.User;
import com.alibaba.dubbo.demo.*;
import com.alibaba.dubbo.rpc.RpcContext;

import java.text.SimpleDateFormat;
import java.util.Date;
public class DemoServiceImpl implements DemoService {
    private int iCount = 100;
    public String sayHello(String name) {
        System.out.println("[" + new SimpleDateFormat("HH:mm:ss").format(new Date()) + "] Hello " + name + ", request from consumer: " + RpcContext.getContext().getRemoteAddress());
        return "Hello " + name + ", response form provider: " + RpcContext.getContext().getLocalAddress();
    }
    public int messageCount(int old) {
    	iCount = old;
    	return iCount;
    }
    
    
    public String echo (String name, Integer value) {
      return "myname is" + name;
    }
    
    public String echoValue (String name, String value) {
    	return "dubbo echo: " + value;
    }
    

    public User info(User info) {
    	info.Age =101;
    	info.Name = "dubbo provider";
       	return info;
    }
    
    public String echoCondition (byte bBy, short sTest,int iCout,long lTest, float fTest, double dTest, boolean bIs, char a) {
      
      return "the test byte ";
    }
    
    public String echoCondition2 (Byte bBy, Short sTest,Integer iCout,Long lTest, Float fTest, Double dTest, Boolean bIs, Character a) {
        return "the test wrap ";
    }
    
    
    public void testvoid(String name) {
        System.out.println("testvoid: " + name + ", request from consumer: " + RpcContext.getContext().getRemoteAddress());
    }

    public String testList(java.util.List<String> lst) {
    	System.out.println("receinve lst");
        try {
       // Thread.sleep(5000);
        }catch(Exception e) {
        	
        }
    	return "from dubbo lst";
    }
    
    public String testMap(java.util.HashMap<String,String> map) {
    	System.out.println("receinve map");  	
    	return "from dubbo map";
    }
    
    public String echoObj(Object obj) {
        return "echoObj";
    }
}